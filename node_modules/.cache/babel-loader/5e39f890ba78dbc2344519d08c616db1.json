{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\baryt\\\\Documents\\\\React-course\\\\src\\\\components\\\\NewExpenses\\\\NewForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './NewForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  const titleChangeHandler = e => setEnteredTitle(e.target.value);\n\n  const amountChangeHandler = e => setEnteredAmount(e.target.value);\n\n  const dateChangeHandler = e => setEnteredDate(e.target.value); // WE HAVE ANOTHER WAY TO DOING THIS useSTATE(), BUT in this way we should save state value, which dont update and that happned because when one value update, update other state two/ we update them together  \n  // const [userInput, setUserInput] = useState({enteredTitle: '',enteredAmount: '',enterdeDate: '',});\n  // const changeTitle =(e)=>{setUserInput({...userInput,enteredTitle: e.target.value,});console.log(userInput);}//onChange ={changeTitle}\n  // const changeAmount = (e)=>{setUserInput({...userInput,enteredAmount: e.target.value,});console.log(userInput);}//onChange ={changeAmount}\n  // const changeDate =(e)=>{setUserInput({...userInput,enterdeDate: e.target.value,});console.log(userInput);}//onChange ={changeDate}\n  // BUT IF WE DEPEND AT THE PREW STATE, WE SHOULD DO THIS WAY: \n\n\n  const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enterdeDate: ''\n  });\n\n  const titleChangeHandler2 = e => {\n    setUserInput(prewState => {\n      return { ...prewState,\n        enteredTitle: e.target.value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"sMGVF9J+vG3iWn+2nX7OgRWvunU=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","e","target","value","amountChangeHandler","dateChangeHandler","userInput","setUserInput","enterdeDate","titleChangeHandler2","prewState"],"sources":["C:/Users/baryt/Documents/React-course/src/components/NewExpenses/NewForm.js"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport './NewForm.css';\r\n\r\nconst ExpenseForm = ()=> {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (e) =>setEnteredTitle(e.target.value); \r\n    const amountChangeHandler = (e) => setEnteredAmount(e.target.value);\r\n    const dateChangeHandler = (e) => setEnteredDate(e.target.value);\r\n\r\n    // WE HAVE ANOTHER WAY TO DOING THIS useSTATE(), BUT in this way we should save state value, which dont update and that happned because when one value update, update other state two/ we update them together  \r\n    // const [userInput, setUserInput] = useState({enteredTitle: '',enteredAmount: '',enterdeDate: '',});\r\n    // const changeTitle =(e)=>{setUserInput({...userInput,enteredTitle: e.target.value,});console.log(userInput);}//onChange ={changeTitle}\r\n    // const changeAmount = (e)=>{setUserInput({...userInput,enteredAmount: e.target.value,});console.log(userInput);}//onChange ={changeAmount}\r\n    // const changeDate =(e)=>{setUserInput({...userInput,enterdeDate: e.target.value,});console.log(userInput);}//onChange ={changeDate}\r\n    // BUT IF WE DEPEND AT THE PREW STATE, WE SHOULD DO THIS WAY: \r\n    const [userInput, setUserInput] = useState({enteredTitle: '',enteredAmount: '',enterdeDate: '',});\r\n    const titleChangeHandler2 =(e)=>{\r\n        setUserInput((prewState)=>{\r\n             return{\r\n                ...prewState,\r\n                enteredTitle: e.target.value,\r\n\r\n             }\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <form>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" onChange={titleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type='number' min='0.01' step='0.01'  onChange={amountChangeHandler}/>               \r\n                </div>    \r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type =\"date\" min='2019-01-01' max='2022-12-31'  onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type =\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAK;EAAA;;EACrB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMQ,kBAAkB,GAAIC,CAAD,IAAMN,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhD;;EACA,MAAMC,mBAAmB,GAAIH,CAAD,IAAOJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnD;;EACA,MAAME,iBAAiB,GAAIJ,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/C,CAPqB,CASrB;EACA;EACA;EACA;EACA;EACA;;;EACA,MAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC;IAACE,YAAY,EAAE,EAAf;IAAkBE,aAAa,EAAE,EAAjC;IAAoCY,WAAW,EAAE;EAAjD,CAAD,CAA1C;;EACA,MAAMC,mBAAmB,GAAGR,CAAD,IAAK;IAC5BM,YAAY,CAAEG,SAAD,IAAa;MACrB,OAAM,EACH,GAAGA,SADA;QAEHhB,YAAY,EAAEO,CAAC,CAACC,MAAF,CAASC;MAFpB,CAAN;IAMJ,CAPW,CAAZ;EAQH,CATD;;EAaA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACI;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAEH;QAA7B;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,QAAZ;UAAqB,GAAG,EAAC,MAAzB;UAAgC,IAAI,EAAC,MAArC;UAA6C,QAAQ,EAAEI;QAAvD;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eASI;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAE,MAAb;UAAoB,GAAG,EAAC,YAAxB;UAAqC,GAAG,EAAC,YAAzC;UAAuD,QAAQ,EAAEC;QAAjE;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAeI;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACI;QAAQ,IAAI,EAAE,QAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH,CAnDD;;GAAMZ,W;;KAAAA,W;AAqDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}